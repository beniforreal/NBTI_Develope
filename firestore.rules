rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // users 컬렉션 - 관리자 권한 관리 (Firebase Console에서만 관리)
    match /users/{email} {
      allow read, write: if false; // Firebase Console에서만 관리
    }
    
    // members 컬렉션 규칙
    match /members/{userId} {
      // 모든 사용자가 멤버 목록을 읽을 수 있음
      allow read: if true;
      // 인증된 사용자만 자신의 문서에 쓰기 가능 (마이페이지 저장용)
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // photos 컬렉션 규칙
    match /photos/{document} {
      // 모든 사용자가 읽기 가능, 인증된 사용자만 쓰기 가능
      allow read: if true;
      allow write: if request.auth != null;
    }
    
    // notices 컬렉션 규칙
    match /notices/{document} {
      // 모든 사용자가 공지사항 읽기 가능
      allow read: if true;
      // 관리자만 공지사항 작성/수정/삭제 가능
      allow write: if request.auth != null && 
        exists(/databases/$(database)/documents/members/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/members/$(request.auth.uid)).data.role in ['길드장', '부길드장', 'admin'];
    }
    
    
    // post_likes 컬렉션 규칙 (좋아요 기능)
    match /post_likes/{likeId} {
      // 모든 사용자가 좋아요 정보를 읽을 수 있음
      allow read: if true;
      // 인증된 사용자만 좋아요 추가/삭제 가능
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && 
        request.auth.uid == resource.data.userId;
      // 좋아요 수정은 불가능
      allow update: if false;
    }
    
    // comments 컬렉션 규칙 (댓글 기능)
    match /comments/{commentId} {
      // 모든 사용자가 댓글을 읽을 수 있음
      allow read: if true;
      // 인증된 사용자만 댓글 작성 가능
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.userId &&
        request.resource.data.keys().hasAll(['postId', 'content', 'author', 'userId', 'userEmail', 'createdAt', 'updatedAt']);
      // 댓글 작성자 또는 관리자만 수정/삭제 가능
      allow update, delete: if request.auth != null && 
        (resource.data.userId == request.auth.uid || 
         (exists(/databases/$(database)/documents/members/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/members/$(request.auth.uid)).data.role in ['길드장', '부길드장', 'admin']));
    }
  }
}